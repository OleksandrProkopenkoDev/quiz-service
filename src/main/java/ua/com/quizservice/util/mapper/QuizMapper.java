package ua.com.quizservice.util.mapper;

import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;
import ua.com.quizservice.config.MapperConfig;
import ua.com.quizservice.dto.quiz.QuizDto;
import ua.com.quizservice.dto.quiz.QuizQuestionDto;
import ua.com.quizservice.entity.quiz.Quiz;

/**
 * Mapper interface for converting between {@link Quiz} entities and {@link QuizDto} DTOs. Uses
 * {@link MapperConfig} for configuration and operates as a Spring component.
 *
 * <p>The methods defined in this interface provide mapping between entity and DTO representations
 * of {@link Quiz} instances. Implementation is generated by MapStruct during the build process.
 *
 * <p>Additionally, this interface includes default methods for updating the entity and DTO from
 * their corresponding counterparts, considering ignored properties specified in the mappings.
 */
@Mapper(
    uses = {QuizQuestionDto.class, QuizQuestionMapper.class},
    config = MapperConfig.class)
public interface QuizMapper {

  @Mapping(target = "auditEntity.createdAt", source = "createdAt")
  @Mapping(target = "auditEntity.updatedAt", source = "updatedAt")
  @Mapping(target = "quizQuestions", source = "quizQuestionDtos")
  Quiz toEntity(QuizDto quizDto);

  @Mapping(target = "createdAt", source = "auditEntity.createdAt")
  @Mapping(target = "updatedAt", source = "auditEntity.updatedAt")
  @Mapping(target = "quizQuestionDtos", source = "quizQuestions")
  QuizDto toDto(Quiz quiz);

  @Mapping(target = "auditEntity.createdAt", source = "createdAt")
  @Mapping(target = "auditEntity.updatedAt", source = "updatedAt")
  @Mapping(target = "quizQuestions", source = "quizQuestionDtos")
  void updateEntityFromDto(@MappingTarget Quiz quiz, QuizDto quizDto);
}
